from telebot import TeleBot
from utils.currency import get_daily_currency, get_currency_history
from utils.graph import draw_currency_graph

user_states = {}


def register_handlers(bot: TeleBot):
    @bot.message_handler(commands=['start'])
    def start(message):
        first_name = (message.from_user.first_name or "").capitalize()
        last_name = (message.from_user.last_name or "").capitalize()

        text = (
            f"–ü—Ä–∏–≤–µ—Ç, {first_name} {last_name}! üëã\n\n"
            "–í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n"
            "‚Ä¢ /kurs <–≤–∞–ª—é—Ç–∞> ‚Äî —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã\n"
            "‚Ä¢ /graph <–≤–∞–ª—é—Ç–∞> <–¥–Ω–∏> ‚Äî –≥—Ä–∞—Ñ–∏–∫ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã –∑–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π\n"
        )

        bot.send_message(message.chat.id, text)

    @bot.message_handler(commands=['kurs'])
    def ask_currency(message):
        parts = message.text.strip().split()
        if len(parts) == 2:
            currency_code = parts[1].upper()
            data = get_daily_currency(currency_code)
            if data:
                bot.send_message(message.chat.id,
                                 f"–ö—É—Ä—Å: {data['nominal']} {currency_code} = {data['value']:.2f} ‚ÇΩ")
            else:
                bot.send_message(message.chat.id,
                                 "–ù–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ —Ç–∞–∫—É—é –≤–∞–ª—é—Ç—É. –ü–æ–ø—Ä–æ–±—É–π USD, EUR, GBP –∏ —Ç.–ø.")
        else:
            user_states[message.chat.id] = 'waiting_for_currency'
            bot.send_message(message.chat.id,
                             "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ –∫–æ–¥ –≤–∞–ª—é—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: USD, EUR, GBP):")

    @bot.message_handler(func=lambda m: user_states.get(m.chat.id) == 'waiting_for_currency')
    def handle_currency_input(message):
        currency_code = message.text.strip().upper()
        data = get_daily_currency(currency_code)

        if data:
            bot.send_message(message.chat.id,
                             f"–ö—É—Ä—Å: {data['nominal']} {currency_code} = {data['value']:.2f} ‚ÇΩ")
        else:
            bot.send_message(message.chat.id,
                             "–ù–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ —Ç–∞–∫—É—é –≤–∞–ª—é—Ç—É. –ü–æ–ø—Ä–æ–±—É–π USD, EUR, GBP –∏ —Ç.–ø.")
        user_states[message.chat.id] = None

    @bot.message_handler(commands=['graph'])
    def graph(message):
        parts = message.text.strip().split()

        if len(parts) != 3:
            bot.send_message(
                message.chat.id,
                "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.\n–ü—Ä–∏–º–µ—Ä: /graph USD 7 (–≥–¥–µ 7 ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π)"
            )
            return

        currency_code = parts[1].upper()

        try:
            days = int(parts[2])
            if days <= 0:
                raise ValueError
        except ValueError:
            bot.send_message(message.chat.id, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")
            return

        records = get_currency_history(currency_code, days)
        if not records:
            bot.send_message(message.chat.id,
                             "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ –≤–∞–ª—é—Ç–µ. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–¥.")
            return

        image_stream = draw_currency_graph(records, currency_code)

        bot.send_photo(message.chat.id, image_stream)

    @bot.message_handler(func=lambda m: True)
    def handle_unknown(message):
        bot.send_message(message.chat.id,
                         "–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª. –í–≤–µ–¥–∏—Ç–µ /start –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.")
